@model AllGamesQueryModel

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Genre"></label>
                <select asp-for="Genre" class="form-control">
                    <option value="">All</option>
                    @foreach (var genre in Model.Genres)
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@await Component.InvokeAsync(nameof(GamesShortInfoComponent), Model.Games)

@{
    var previousPage = Model.Page - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var nextPage = Model.Page + 1;
    if (nextPage < Model.TotalPages)
    {
        nextPage = Model.TotalPages;
    }
}

<div class="mt-4">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                <a class="page-link" asp-controller="Games" asp-action="All" 
                    asp-route-page="1"
                    asp-route-category="@Model.Genre"
                    asp-route-searchTerm="@Model.SearchTerm"
                    aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                <a class="page-link" asp-controller="Games" asp-action="All"
                   asp-route-page="@previousPage"
                   asp-route-category="@Model.Genre"
                   asp-route-searchTerm="@Model.SearchTerm" 
                   aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = Model.Page - 2; i <= Model.TotalPages && i <= Model.Page + 2; i++)
            {
                @if (i > 0)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" asp-controller="Games" asp-action="All"
                           asp-route-page="@i"
                           asp-route-category="@Model.Genre"
                           asp-route-searchTerm="@Model.SearchTerm">
                           @i</a>
                    </li>
                }
            }

            <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-controller="Games" asp-action="All"
                   asp-route-page="@nextPage"
                   asp-route-category="@Model.Genre"
                   asp-route-searchTerm="@Model.SearchTerm"
                   aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-controller="Games" asp-action="All" 
                asp-route-page="@Model.TotalPages"
                   asp-route-category="@Model.Genre"
                   asp-route-searchTerm="@Model.SearchTerm" 
                   aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>